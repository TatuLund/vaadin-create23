<!DOCTYPE hibernate-configuration PUBLIC "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
    <session-factory>

        <!-- Use PostgreSQL dialect and driver instead of H2 -->
        <property name="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</property>
        <property name="hibernate.connection.driver_class">org.postgresql.Driver</property>
        <property name="hibernate.connection.url">jdbc:postgresql://db:5432/vaadincreate</property>
        <property name="hibernate.connection.username">creator</property>
        <property name="hibernate.connection.password">creator</property>

        <!-- Use HikariCP for connection pooling -->
        <property name="hibernate.connection.provider_class">org.hibernate.hikaricp.internal.HikariCPConnectionProvider</property>
        <property name="hibernate.hikari.minimumIdle">5</property>
        <property name="hibernate.hikari.maximumPoolSize">20</property>
        <property name="hibernate.hikari.idleTimeout">300000</property>

        <!-- Usually you want to manage schema differently in production (e.g. 'validate', 'update') -->
        <property name="hibernate.hbm2ddl.auto">validate</property>

        <!-- Optionally keep show_sql off to reduce log noise in production -->
        <property name="hibernate.show_sql">false</property>
        <property name="hibernate.format_sql">false</property>

        <!-- Entity mappings remain the same -->
        <mapping class="org.vaadin.tatu.vaadincreate.backend.data.Product"/>
        <mapping class="org.vaadin.tatu.vaadincreate.backend.data.Category"/>
        <mapping class="org.vaadin.tatu.vaadincreate.backend.data.User"/>
        <mapping class="org.vaadin.tatu.vaadincreate.backend.data.Draft"/>
        <mapping class="org.vaadin.tatu.vaadincreate.backend.data.Message"/>

    </session-factory>
</hibernate-configuration>